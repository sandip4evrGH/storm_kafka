Understood! Here's how to set up Kafka with SASL_PLAINTEXT authentication for a 3-node Zookeeper setup, 6 Kafka brokers, and multiple users, with a focus on configuring everything for SASL_PLAINTEXT.

---

### **1. Zookeeper Configuration (SASL_PLAINTEXT)**

#### **Update `zookeeper.properties`**
On each of the three Zookeeper nodes, add the following:
```plaintext
authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
requireClientAuthScheme=sasl
```

#### **Create Zookeeper JAAS Config**
Create a file (e.g., `zookeeper_jaas.conf`) on each Zookeeper node:
```plaintext
Server {
    org.apache.zookeeper.server.auth.DigestLoginModule required
    user_admin="admin-password";
    user_user1="user1-password";
    user_user2="user2-password";
};
```

#### **Start Zookeeper with SASL_PLAINTEXT**
Run Zookeeper with the JAAS configuration:
```bash
export KAFKA_OPTS="-Djava.security.auth.login.config=/path/to/zookeeper_jaas.conf"
bin/zookeeper-server-start.sh config/zookeeper.properties
```

---

### **2. Kafka Broker Configuration (6 Nodes)**

#### **Update `server.properties`**
On all six Kafka brokers, add the following:
```plaintext
listeners=SASL_PLAINTEXT://:9092
advertised.listeners=SASL_PLAINTEXT://<broker-host>:9092
sasl.enabled.mechanisms=PLAIN
sasl.mechanism.inter.broker.protocol=PLAIN
inter.broker.listener.name=SASL_PLAINTEXT
zookeeper.connect=<zookeeper1>:2181,<zookeeper2>:2181,<zookeeper3>:2181
```

#### **Create Kafka Broker JAAS Config**
Create a JAAS file for Kafka brokers (e.g., `kafka_broker_jaas.conf`):
```plaintext
KafkaServer {
    org.apache.kafka.common.security.plain.PlainLoginModule required
    username="admin" password="admin-password";
    username="user1" password="user1-password";
    username="user2" password="user2-password";
};
```

#### **Start Kafka with SASL_PLAINTEXT**
Run Kafka with the JAAS configuration:
```bash
export KAFKA_OPTS="-Djava.security.auth.login.config=/path/to/kafka_broker_jaas.conf"
bin/kafka-server-start.sh config/server.properties
```

---

### **3. Adding ACLs for Users**

#### **Admin User (Full Access)**
```bash
bin/kafka-acls.sh --bootstrap-server localhost:9092 \
    --add --allow-principal User:admin \
    --operation All --cluster
```

#### **User1 (Read/Write on `Topic1`)**
```bash
bin/kafka-acls.sh --bootstrap-server localhost:9092 \
    --add --allow-principal User:user1 \
    --operation Read --operation Write --topic Topic1
```

#### **User2 (Read Access on `Topic2`)**
```bash
bin/kafka-acls.sh --bootstrap-server localhost:9092 \
    --add --allow-principal User:user2 \
    --operation Read --topic Topic2
```

---

### **4. Kafka Client Configuration**

#### **JAAS Configs for Each User**
- **Admin (`admin_jaas.conf`):**
  ```plaintext
  KafkaClient {
      org.apache.kafka.common.security.plain.PlainLoginModule required
      username="admin"
      password="admin-password";
  };
  ```

- **User1 (`user1_jaas.conf`):**
  ```plaintext
  KafkaClient {
      org.apache.kafka.common.security.plain.PlainLoginModule required
      username="user1"
      password="user1-password";
  };
  ```

- **User2 (`user2_jaas.conf`):**
  ```plaintext
  KafkaClient {
      org.apache.kafka.common.security.plain.PlainLoginModule required
      username="user2"
      password="user2-password";
  };
  ```

#### **Client Properties**
Each user will need a properties file:
- **Admin (`admin_client.properties`):**
  ```plaintext
  security.protocol=SASL_PLAINTEXT
  sasl.mechanism=PLAIN
  sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
      username="admin" \
      password="admin-password";
  ```

- **User1 (`user1_client.properties`):**
  ```plaintext
  security.protocol=SASL_PLAINTEXT
  sasl.mechanism=PLAIN
  sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
      username="user1" \
      password="user1-password";
  ```

- **User2 (`user2_client.properties`):**
  ```plaintext
  security.protocol=SASL_PLAINTEXT
  sasl.mechanism=PLAIN
  sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
      username="user2" \
      password="user2-password";
  ```

---

### **5. Testing Configuration**

#### **List Topics**
Run as `admin`:
```bash
bin/kafka-topics.sh --bootstrap-server localhost:9092 --list --command-config admin_client.properties
```

#### **Produce and Consume Messages**
- **User1 Producing to `Topic1`:**
  ```bash
  bin/kafka-console-producer.sh --bootstrap-server localhost:9092 \
      --topic Topic1 --producer.config user1_client.properties
  ```

- **User2 Consuming from `Topic2`:**
  ```bash
  bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 \
      --topic Topic2 --from-beginning --consumer.config user2_client.properties
  ```

---

### **6. List All ACLs**
To view all ACLs, run:
```bash
bin/kafka-acls.sh --bootstrap-server localhost:9092 --list
```

This command will display all users, their permissions, and the resources they can access.

---

With these configurations, your Kafka cluster will be secured using **SASL_PLAINTEXT** and managed with ACLs for multiple users. Let me know if there's anything you'd like me to clarify further!
